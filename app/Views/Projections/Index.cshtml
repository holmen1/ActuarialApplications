@using NuGet.Protocol
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ProjectionIndexModel

@{
    ViewData["Title"] = "Projection";
}

<form method="get" asp-action="Index">
    <div class="form-group">
        <label>Swap ValueDate:</label>
        <select asp-for="SelectedDate" asp-items="Model.ValueDates" onchange="this.form.submit();"></select>
    </div>
</form>


<table class="table">
    <tbody>
        <tr>
            <th>
                Tenor
            </th>
            @foreach (var item in Model.SwapRates)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Tenor)
                </td>
            }
        </tr>
        <tr>
            <th>
                Par
            </th>
        @foreach (var item in Model.SwapRates)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
            }
        </tr>
    </tbody>
</table>

<p>Parameters: @Model.Param.ToJson()</p>


<div id="projection" style="width: 800px; height: 500px;"></div>

<table class="table">
    <thead>
    <tr>
        <th>
            Maturity
        </th>
        <th>
            Spot
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Rfr )
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Maturity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SpotValue)
            </td>
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawProjection);

      function drawProjection() {
        var data = google.visualization.arrayToDataTable([
                ['Year', 'SpotValue']
            ]
            .concat(@Json.Serialize(Model.Rfr.Select(x => new[]
                    { x.Maturity, 100 * x.SpotValue })))
        );

        var options = {
          title: 'Risk-free rate projection',
          curveType: 'function',
          legend: { position: 'bottom' }
        };

        var chart = new google.visualization.LineChart(document.getElementById('projection'));
        chart.draw(data, options);
      }
    </script>
}
