@model LifeIndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form method="get" asp-action="Index">
    <div class="form-group">
        <label>Contract:</label>
        <select asp-for="SelectedContractNo" asp-items="Model.ContractNoList" onchange="this.form.submit();"></select>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Contract.ContractNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contract.ValueDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contract.BirthDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contract.Sex)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contract.VestingAge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contract.GuaranteeBenefit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contract.PayPeriod)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Contract.Table)
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>
            @Html.DisplayFor(model => model.Contract.ContractNo)
        </td>
        <td>
            @Html.DisplayFor(model => model.Contract.ValueDate)
        </td>
        <td>
            @Html.DisplayFor(model => model.Contract.BirthDate)
        </td>
        <td>
            @Html.DisplayFor(model => model.Contract.Sex)
        </td>
        <td>
            @Html.DisplayFor(model => model.Contract.VestingAge)
        </td>
        <td>
            @Html.DisplayFor(model => model.Contract.GuaranteeBenefit)
        </td>
        <td>
            @Html.DisplayFor(model => model.Contract.PayPeriod)
        </td>
        <td>
            @Html.DisplayFor(model => model.Contract.Table)
        </td>
    </tr>
    </tbody>
</table>


<div class="row">
    <div class="col-md-4">
        <form method="get" asp-action="Create">
            <table class="table">
                <thead>
                <tr>
                    <th>Birth Date</th>
                    <th>Sex</th>
                    <th>Vesting Age</th>
                    <th>Guarantee Benefit</th>
                    <th>Pay Period</th>
                    <th>Table</th>
                </tr>
                </thead>
                <tr>
                    <input type="hidden" name="ContractNo" value="@Model.Contract.ContractNo"/>
                    <input type="hidden" name="ValueDate" value="@Model.Contract.ValueDate"/>
                    <td><input type="text" name="BirthDate" value="@Model.Contract.BirthDate"/></td>
                    <td><input type="text" name="Sex" value="@Model.Contract.Sex"/></td>
                    <td><input type="text" name="VestingAge" value="@Model.Contract.VestingAge"/></td>
                    <td><input type="text" name="GuaranteeBenefit" value="@Model.Contract.GuaranteeBenefit"/></td>
                    <td><input type="text" name="PayPeriod" value="@Model.Contract.PayPeriod"/></td>
                    <td><input type="text" name="Table" value="@Model.Contract.Table"/></td>
                </tr>
            </table>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="submit" value="Get cashflows" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

@if (Model.DiscountedCashFlows.Any())
{
    <div id="chart_div" style="width: 1400px; height: 500px;"></div>
    <div id="discounted_chart_div" style="width: 1400px; height: 500px;"></div>
}

<div>
    Technical Provision: @Html.DisplayFor(model => model.TechnicalProvision)
</div>


@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CashFlows[0].ContractNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CashFlows[0].ValueDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CashFlows[0].Month)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CashFlows[0].Benefit)
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.CashFlows)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ContractNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ValueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Month)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Benefit)
            </td>
        </tr>
    }
    </tbody>
</table>


@section Scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', {'packages': ['corechart']});
        google.charts.setOnLoadCallback(drawCashflows);
        google.charts.setOnLoadCallback(drawDiscountedCashflows);

        function drawCashflows() {
            var data = google.visualization.arrayToDataTable([
                ['Month', 'Benefit'],
                @foreach (var item in Model.CashFlows)
                {
                    @:[@item.Month/12 + @Model.Age, @item.Benefit],
                }
            ]);

            var options = {
                title: 'Estimated Cashflows',
                hAxis: {title: 'Age',
                        viewWindow: {
                            min: @Model.Age,
                            max: 104
                        },
                        titleTextStyle: {color: '#333'}
                },
                vAxis: {minValue: 0}
            };

            var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }
        
        function drawDiscountedCashflows() {
            var data = google.visualization.arrayToDataTable([
                ['Month', 'Benefit'],
                @foreach (var item in Model.DiscountedCashFlows)
                {
                    @:[@item.Month/12 + @Model.Age, @item.Benefit],
                }
            ]);

            var options = {
                title: 'Discounted Estimated Cashflows',
                hAxis: {title: 'Age',
                        viewWindow: {
                            min: @Model.Age,
                            max: 104
                        },
                        titleTextStyle: {color: '#333'}
                },
                vAxis: {minValue: 0}
            };

            var chart = new google.visualization.ColumnChart(document.getElementById('discounted_chart_div'));
            chart.draw(data, options);
        }
    </script>
}